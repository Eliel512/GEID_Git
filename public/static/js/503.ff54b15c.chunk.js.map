{"version":3,"file":"static/js/503.ff54b15c.chunk.js","mappings":"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","sources":["services/canvasToImg.js","components/AvatarProfileEditor.js","components/ProfileNav.js","components/AppNav.js","views/home/linkItems.js","views/home/Header.js","services/capStr.js","components/CardMediaPub.js","views/home/carouselItems.js","views/home/cardItems.js","views/home/Home.js"],"sourcesContent":["import { PixelCrop } from 'react-image-crop'\n\nconst TO_RADIANS = Math.PI / 180\n\nexport default (async (\n  image,\n  crop,\n  scale = 1,\n  rotate = 0,\n) => new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    const scaleX = image.naturalWidth / image.width\n    const scaleY = image.naturalHeight / image.height\n  \n    const pixelRatio = window.devicePixelRatio\n\n    canvas.width = Math.floor(crop.width * scaleX * pixelRatio)\n    canvas.height = Math.floor(crop.height * scaleY * pixelRatio)\n\n    ctx.scale(pixelRatio, pixelRatio)\n    ctx.imageSmoothingQuality = 'high'\n\n    const cropX = crop.x * scaleX\n    const cropY = crop.y * scaleY\n\n    const rotateRads = rotate * TO_RADIANS\n    const centerX = image.naturalWidth / 2\n    const centerY = image.naturalHeight / 2\n\n    ctx.save()\n\n    ctx.translate(-cropX, -cropY)\n\n    ctx.translate(centerX, centerY)\n\n    ctx.rotate(rotateRads)\n\n    ctx.scale(scale, scale)\n    \n    ctx.translate(-centerX, -centerY)\n    ctx.drawImage(\n        image,\n        0,\n        0,\n        image.naturalWidth,\n        image.naturalHeight,\n        0,\n        0,\n        image.naturalWidth,\n        image.naturalHeight,\n    )\n    ctx.restore();\n    canvas.toBlob(resolve, 'image/webp');\n}));\n","import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Skeleton,\n    useTheme,\n    Box,\n} from '@mui/material';\nimport FormInputTheme from '../config/FormInputTheme';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport useAxios from 'axios-hooks';\nimport canvasToImg from '../services/canvasToImg';\nimport { getName } from '../services/getFileExtension';\nimport { LoadingButton } from '@mui/lab';\n\nexport default function AvatarProfileEditor (props) {\n    const [{loading}, refetch, cancel] = useAxios({\n        method: 'post',\n    }, {manual: true});\n    const [values, setValues] = useState({\n      message: '',\n      snackbar: false,\n      error: false,\n    });\n    const {file, ...otherProps} = props;\n    const open= !!file;\n    const theme = useTheme();\n    const color = theme.palette.mode === 'dark' ? 'inherit' : 'primary';\n    const cropData = useRef({\n      targetEl: null,\n      crop: {},\n    });\n    \n    const handleSendProfile = () => {\n      const {targetEl, crop} = cropData.current;\n      canvasToImg(targetEl, crop).then(blob => {\n        const blobToFile = new File([blob], \n          getName(file.name) + '.webp', {\n          type: 'image/webp'\n        });\n        const data = new FormData();\n        data.append('file', blobToFile);\n        refetch({data}).then(props.onClose);\n      });\n    };\n\n  return (\n    <React.Fragment>\n      <FormInputTheme>\n        <Dialog\n          open={open}\n          {...otherProps}\n          //scroll={scroll}\n          fullWidth\n          BackdropProps={{\n              sx: {\n                  backdropFilter: 'blur(15px)'\n              }\n          }}\n        >\n          <DialogTitle id=\"scroll-dialog-title\">Editeur profile</DialogTitle>\n          <DialogContent dividers={true}>\n              {file && <Editer ref={cropData} src={URL.createObjectURL(file)}/>}\n          </DialogContent>\n          <DialogActions>\n            <Button \n              onClick={() => {\n                cancel();\n                cropData.current = {\n                  targetEl: null,\n                  crop: {},\n                };\n                props.onClose();\n              }} \n              size=\"small\" \n              color={color}\n            >annuler</Button>\n            <LoadingButton\n              onClick={handleSendProfile} \n              size=\"small\" \n              variant=\"outlined\" \n              color={color}\n              loading={loading}\n            >ajouter</LoadingButton>\n          </DialogActions>\n        </Dialog>\n      </FormInputTheme>\n    </React.Fragment>\n  );\n}\n\nconst Editer = forwardRef((props, ref) => {\n    const [crop, setCrop] = useState(((ref || {}).current || {}).crop);\n    const [loading, setLoading] = useState(false);\n    const targetEl = useRef(null);\n    useEffect(() => {\n        if(ref) ref.current = {\n          crop,\n          targetEl: targetEl.current,\n        };\n    });\n    return (\n      <Box\n        sx={{\n          flex: 1,\n          display: 'flex',\n          minHeight: 340,\n        }}\n      >\n        <ReactCrop \n            crop={crop} \n            onChange={crop => setCrop(crop)}\n            circularCrop={true}\n            aspect={1}\n        >\n            <Box\n                src={props.src}\n                ref={targetEl}\n                component=\"img\"\n                alt={props.src.toString()}\n                onLoad={() => setLoading(true)}\n                sx={{ display : loading ? '' : 'none'}}\n            />\n        </ReactCrop>\n        {!loading &&\n        <Skeleton \n          sx={{\n            display: 'flex',\n            width: '100%',\n            height: 350,\n          }}\n          variant=\"rectangular\"\n          aniamation=\"wave\"\n        />}\n      </Box>\n    )\n\n})","import React, { useRef, useState } from 'react';\nimport {\n    Menu, \n    Box,\n    CardContent, \n    CardHeader, \n    Avatar, \n    IconButton, \n    useTheme, \n    CardActions, \n    Button, \n    Divider, \n    Badge\n} from '@mui/material';\nimport FromInputTheme from '../config/FormInputTheme';\nimport { useSession } from '../services/globalConfig';\nimport AddAPhotoRoundedIcon from '@mui/icons-material/AddAPhotoRounded';\nimport AvatarProfileEditor from './AvatarProfileEditor';\n\nexport default function ProfileNav (props) {\n    const [values, setValues] = useState({\n        file: null,\n    });\n    const {el,...otherProps} = props;\n    const [, {getSession, cleanSession}] = useSession();\n    const { email, lastName, middleName, firstName } = getSession('user') || {}\n    const isAuth = getSession('user');\n    const theme = useTheme();\n    const color = theme.palette.mode === 'dark' ? 'inherit' : 'primary';\n    const fileInput = useRef();\n    return ( isAuth &&\n        <React.Fragment>\n            <Menu \n                id=\"profile\" \n                anchorEl={el} \n                keepMounted \n                open={!!el}\n                {...otherProps}\n                PaperProps={{\n                    elevation: 0,\n                    sx: {\n                        overflow: 'visible',\n                        backdropFilter: 'blur(15px)',\n                        bgcolor: theme => theme.palette.background.paper + 'ee',\n                        border: theme => '1px solid '+ theme.palette.divider,\n                        m:0,\n                        p:0\n                    }\n                }}\n                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n            >\n                <Box\n                    sx={{\n                        //width: 400\n                    }}\n                >\n                    <CardContent>\n                        <FromInputTheme>\n                            <CardHeader\n                                sx={{\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    flex: 1\n                                }}\n                            avatar={\n                                <Badge\n                                    overlap=\"circular\"\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    badgeContent={\n                                        <Box\n                                            sx={{\n                                                bgcolor: theme => theme.palette.background.paper + 'ee', \n                                                borderRadius: 25,\n                                            }}\n                                        >\n                                            <IconButton \n                                                size=\"small\"\n                                                onClick={() => fileInput.current.click()}\n                                            >\n                                                <AddAPhotoRoundedIcon fontSize=\"small\"/>\n                                            </IconButton>\n                                        </Box>\n                                    }\n                                >\n                                    <Avatar \n                                        sx={{\n                                            width: 70,\n                                            height: 70,\n                                            fontSize: 25,\n                                            bgcolor: 'primary.main'\n                                        }}\n                                    aria-label=\"\">\n                                    {lastName.charAt(0)}\n                                    </Avatar>\n                                </Badge>\n                            }\n                            title={`${lastName} ${middleName ? middleName + ' ': ''}${firstName}`}\n                            titleTypographyProps={{\n                                fontSize: 20,\n                                variant: 'h6',\n                                //paragraph: true,\n                                align: 'center'\n                            }}\n                            subheader={email}\n                            subheaderTypographyProps={{\n                                align: 'center'\n                            }}\n                            />\n                            <Divider/>\n                                <CardActions\n                                    sx={{justifyContent: 'center'}}\n                                >\n                                    <Button \n                                        color={color} \n                                        variant=\"outlined\" \n                                        size=\"small\"\n                                        onClick={() => cleanSession('user')}\n                                    >\n                                        deconnexion\n                                    </Button>\n                                </CardActions>\n                            <Divider/>\n                            <CardActions sx={{mb:0, pb:0}}>\n                                    <Button   size=\"small\" variant=\"text\" color={color} sx={{flexGrow: 1, textTransform: 'none', fontSize: 12}}>\n                                        Régles de confidentialité\n                                    </Button>\n                                    <Button size=\"small\" variant=\"text\" color={color} sx={{flexGrow: 1, textTransform: 'none', fontSize: 12}}>\n                                        Conditions d'utilisation\n                                    </Button>\n                            </CardActions>\n                        </FromInputTheme>\n                    </CardContent>\n                </Box>\n            </Menu>\n            <input \n                ref={fileInput} \n                type=\"file\" \n                hidden \n                accept=\"image/*\"\n                onChange={event => {\n                    const [file] = event.target.files;\n                    if(file) {\n                        setValues({\n                            file: event.target\n                            .files[0]\n                        })}\n                        props.onClose();\n                    } \n                }\n            />\n            <AvatarProfileEditor\n                file={values.file}\n                onClose={() => setValues({\n                    ...values, \n                    file: null\n                })}\n            />\n        </React.Fragment>\n    )\n}","import {\n    Menu,\n    CardActionArea, \n    Typography, \n    Box, \n    FormHelperText, \n    Grid,\n    Stack,\n} from '@mui/material';\nimport workspaceIconImage from '../icons/icons8-mallette-48.png';\nimport medialibraryIconImage from '../icons/icons8-aparat-48.png';\nimport archiveIconImage from '../icons/icons8-file-64.png';\nimport ImgToIcon from '../icons/ImgToIcon';\nimport { Link } from 'react-router-dom';\nimport CropText from './CropText';\n\nexport default function AppNav (props) {\n    const {el, ...otherProps} = props;\n return (\n    <Menu \n        id=\"profile\" \n        anchorEl={el} \n        keepMounted \n        open={!!el}\n        {...otherProps}\n        PaperProps={{\n            elevation: 0,\n            sx: {\n                overflow: 'visible',\n                backdropFilter: 'blur(15px)',\n                bgcolor: theme => theme.palette.background.paper + 'ee',\n                border: theme => '1px solid '+ theme.palette.divider,\n                m:0,\n                p:0\n            }\n        }}\n        // transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        // anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n       <Typography sx={{m: 1}} variant=\"h6\" fontSize={18}>\n                Applications\n        </Typography>\n        <Box\n            sx={{\n                display: 'flex',\n                flex: 1,\n                width: 300,\n                m: 1,\n                flexDirection: 'row',\n                height: 350,\n            }}\n            component={Grid}\n            container\n        >\n            {apps.sort().map((app, index) => (\n                <Box\n                    component={Grid}\n                    item\n                    key={index}\n                    xs={3}\n                >\n                    <Stack spacing={.1}>\n                        <CardActionArea\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: .5,\n                            }}\n                            LinkComponent={Link}\n                            to={app.path}\n                        >\n                            <ImgToIcon\n                                src={app.icon}\n                                size={50}\n                            />\n                        </CardActionArea>\n                        <FormHelperText \n                            sx={{textAlign: 'center', textOverflow: 'ellipsis',}}\n                        >{\n                        app.label.length <= 10 ? app.label :\n                        <CropText\n                            len={7}\n                            padType=\"left\"\n                        >{app.label}</CropText>\n                        }</FormHelperText>\n                    </Stack>\n                </Box>\n            ))}\n        </Box>\n    </Menu>\n )\n}\n\nconst apps = [\n    {\n        label: 'Mediathèque',\n        icon: medialibraryIconImage,\n        path: '/app/medialibrary',\n    },\n    {\n        label: 'Archives',\n        icon: archiveIconImage,\n        path: '/app/archives',\n    },\n    {\n        label: 'Espace personnel',\n        icon: workspaceIconImage,\n        path: '/app/workspaces',\n    },\n];","import HomeRoundedIcon from '@mui/icons-material/HomeRounded';\nimport DashboardRoundedIcon from '@mui/icons-material/DashboardRounded';\nimport ContactSupportRoundedIcon from '@mui/icons-material/ContactSupportRounded';\nimport TheatersRoundedIcon from '@mui/icons-material/TheatersRounded';\n\nconst linkItems = [\n    {\n        label: 'accueil',\n        path: '/home',\n        icon: HomeRoundedIcon,\n        disabled: false,\n        accessMode: 'private|public',\n    },\n    {\n        label: 'mediatheque',\n        path: '/app/medialibrary',\n        icon: TheatersRoundedIcon,\n        disabled: false,\n        accessMode: 'private|public',\n    },\n    {\n        label: 'tableau de bord',\n        path: '/app/dashboard',\n        icon: DashboardRoundedIcon,\n        disabled: false,\n        accessMode: 'private',\n    },\n    {\n        label: 'aide',\n        path: '/help',\n        icon: ContactSupportRoundedIcon,\n        disabled: true,\n        accessMode: 'private|public',\n    }\n];\n\nexport default linkItems;\n","import {\n    Box,\n    Tabs,\n    Tab,\n    AppBar ,\n    Toolbar,\n    Button,\n    useTheme,\n    Tooltip,\n    IconButton,\n    Stack,\n    Chip,\n    Avatar\n} from '@mui/material';\nimport React,{ useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport FromInputTheme from '../../config/FormInputTheme';\nimport SettingsRoundedIcon from '@mui/icons-material/SettingsRounded';\nimport { useConfig, useSession } from '../../services/globalConfig';\nimport AppsRoundedIcon from '@mui/icons-material/AppsRounded';\nimport ProfileNav from '../../components/ProfileNav';\nimport AppNav from '../../components/AppNav';\nimport links from './linkItems';\n\nexport default function Header () {\n    const [,{getSession}] = useSession();\n    const [, actions] = useConfig();\n    const [values, setValues] = useState({\n        tab: 0,\n        propfileNav: null,\n        appNav: null,\n    });\n    const theme = useTheme();\n    const isAuth = getSession('user');\n    return (\n        <React.Fragment>\n            <AppBar\n                sx={{\n                    position: 'sticky',\n                    top: 0,\n                    backdropFilter: 'blur(15px)',\n                    bgcolor: theme => theme.palette.background.paper + '50'\n                }}\n            >\n                <Toolbar>\n                    <FromInputTheme>\n                        <Tabs\n                            onChange={(event, value) => {\n                                setValues({...values, tab: value})\n                            }}\n                            value={values.tab}\n                            sx={{\n                                flexGrow: 1\n                            }}\n                        >\n                            {\n                                links.map((link, index) => (\n                                    RegExp(link.accessMode)\n                                    .test( isAuth ? 'private' : 'public') &&\n                                    <Tab\n                                        label={link.label}\n                                        value={index}\n                                        key={index}\n                                        LinkComponent={Link}\n                                        iconPosition=\"start\"\n                                        to={link.path}\n                                        icon={<link.icon fontSize=\"small\"/>}\n                                        disabled={link.disabled}\n                                    />\n                                ))\n                            }\n                        </Tabs>\n                    </FromInputTheme>\n                    <Stack spacing={1} direction=\"row\">\n\n                        <Box>\n                            <Tooltip arrow title=\"Paramètre\" enterDelay={700}>\n                                <IconButton size=\"small\"\n                                    onClick={() => actions(null).handleChangeProps({settingsNav: true})}\n                                >\n                                    <SettingsRoundedIcon fontSize=\"small\"/>\n                                </IconButton>\n                            </Tooltip>\n                        </Box>\n                            {isAuth ?\n                            (\n                            <React.Fragment>\n                                <Box>\n                                    <Tooltip arrow title=\"Applications\" enterDelay={700}>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={event => setValues({\n                                                ...values,\n                                                appNav: event.target\n                                            })}\n                                        >\n                                            <AppsRoundedIcon fontSize=\"small\"/>\n                                        </IconButton>\n                                    </Tooltip>\n                                </Box>\n                                <Box>\n                                    <Tooltip arrow title=\"Profil\" enterDelay={700}>\n                                        <Chip\n                                            avatar={<Avatar />}\n                                            label={isAuth.lastName}\n                                            variant=\"outlined\"\n                                            component=\"button\"\n                                            onClick={event => setValues({\n                                                ...values,\n                                                propfileNav: event.target\n                                            })}\n                                        />\n                                    </Tooltip>\n                                </Box>\n                            </React.Fragment>\n                            ) :\n                            <Box>\n                                <Button variant=\"outlined\" size=\"small\"\n                                color={theme.palette.mode === 'dark' ? \"inherit\" : \"primary\"}\n                                LinkComponent={Link}\n                                to=\"/login\"\n                            >connexion</Button>\n                            </Box>}\n                    </Stack>\n                </Toolbar>\n            </AppBar>\n            <ProfileNav\n                onClose={()=> setValues({\n                    ...values,\n                    propfileNav: null,\n                    })}\n                el={values.propfileNav}\n            />\n            <AppNav\n                onClose={()=> setValues({\n                    ...values,\n                    appNav: null,\n                    })}\n                el={values.appNav}\n            />\n        </React.Fragment>\n    )\n}\n","export default text =>\n(typeof text === 'string') ? text.replace(text.charAt(0), text.charAt(0).toUpperCase()) : '';\n","import React, { useState } from 'react';\nimport {\n    Card,\n    CardContent,\n    CardActionArea,\n    CardMedia,\n    Box,\n    Typography,\n    Skeleton,\n    Dialog,\n    DialogContent,\n    DialogActions,\n    Button,\n    useTheme,\n} from '@mui/material';\nimport capStr from '../services/capStr';\nimport { Link } from 'react-router-dom';\n\nexport default function CardMediaPub (props) {\n    const {\n        uri,\n        content,\n        title,\n        href,\n        modeLink,\n        message,\n        access,\n        navigateTo,\n    } = props;\n    const [loaded, setLoad] = useState(false);\n    const [open, setOpen] = useState(false);\n    const theme = useTheme();\n    const color = theme.palette.mode === 'dark' ? \"inherit\" : \"primary\";\n    return (\n        <React.Fragment>\n            <Box\n                {...(modeLink === 'out' ? {\n                    LinkComponent: 'a',\n                    href,\n                }: modeLink === 'in' ? {\n                    LinkComponent: Link,\n                    to: href,\n                } : {}\n                )}\n                component={CardActionArea}\n                onClick={event => {\n                    access || event.preventDefault();\n                    if(!access)\n                        setOpen(true)\n                }}\n            >\n                <Card elevation={5}\n                    sx={{\n                            height: 165,\n                            display: 'flex',\n                            border: (theme) => `1px solid ${theme.palette.divider}`,\n                        }}>\n                    <Box sx={{ display: 'flex', flexGrow: 1 }}>\n                        <CardContent>\n                            <Typography\n                                variant=\"h6\"\n                                component=\"div\"\n                            >{capStr(title)}</Typography>\n                            <Typography\n                                variant=\"body2\"\n                                component=\"div\"\n                                color=\"text.secondary\"\n                            >{content}</Typography>\n                        </CardContent>\n                    </Box>\n                    <CardMedia\n                        image={uri}\n                        sx={{width: 165, display: loaded ? '' : 'none'}}\n                        component=\"img\"\n                        onLoad={() => setLoad(true)}\n                    />\n                    {!loaded &&\n                    <CardMedia>\n                        <Skeleton\n                            variant=\"rectangular\"\n                            animation=\"wave\"\n                            width={165}\n                            height={165}\n                        />\n                    </CardMedia>\n                    }\n                </Card>\n            </Box>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n            >\n                <DialogContent>\n                    <Typography variant=\"body2\">\n                        {message}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        color={color}\n                        children=\"annuler\"\n                        onClick={() => setOpen(false)}\n                        size=\"small\"\n                    />\n                    <Button\n                        children=\"se connecter\"\n                        color={color}\n                        variant=\"outlined\"\n                        LinkComponent={Link}\n                        to={navigateTo}\n                        size=\"small\"\n                    />\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n","import carouselImage1 from '../../assets/carousels/carousel_image1.jpg';\nimport carouselImage2 from '../../assets/carousels/carousel_image2.jpg';\nimport carouselImage3 from '../../assets/carousels/carousel_image3.jpg';\nimport carouselImage4 from '../../assets/carousels/carousel_image4.jpg';\nimport carouselImage5 from '../../assets/carousels/carousel_image5.jpg';\n\nconst carouselItems = [\n    {\n        uri: carouselImage1,\n        title: \"Gain de temps\",\n        description: `\n        Geid permet un véritable gain de temps via un processus \n        de numérisation qui comprime le volume papier et permet d’accéder \n        rapidement au document recherché\n        `,\n    },\n    {\n        uri: carouselImage2,\n        title: \"Bibliothèque\",\n        description: `\n        La bibliothèque numérique propose de véritables collections de documents budgétaires,\n        alimentées d'ouvrages à jour du Ministère.\n        Le contenu est organisé pour en faciliter la consultation.\n        `,\n    },\n    {\n        uri: carouselImage3,\n        title: \"Gestion des documents\",\n        description: `\n        Faciliter la recherche ainsi que le partage sans pour autant accroître \n        la complexité de la procédure d’accès aux documents.\n        `,\n    },\n    {\n        uri: carouselImage4,\n        title: \"Archives\",\n        description: `\n        Geid, dans son volet archivage, recueille, classe et conserve le document quel que soit \n        son format (image, vidéo, etc...), en toute sécurité.\n       `,\n    },\n    {\n        uri: carouselImage5,\n        title: \"Sécurité\",\n        description: `\n        La sécurité de l'information demeure un enjeu majeur de garantie de fiabilité d'un système.\n        Geid y répond.\n        `,\n    },\n\n];\n\nexport default carouselItems;\n","import archivesImage from '../../assets/cards/archives.jpg';\nimport photolibraryImage from '../../assets/cards/photo.png';\nimport filmlibraryImage from '../../assets/cards/film.png';\nimport libraryImage from '../../assets/cards/library.jpg';\nimport productImage from '../../assets/cards/product.jpg';\nimport managerImage from '../../assets/cards/manager.jpg';\n\nconst cardItems = [\n        {\n            title: 'archives',\n            src: archivesImage,\n            accessMode: 'private',\n            href: '/app/archives',\n            redirectTo: '/login',\n            content: `\n            Archivage est l’ensemble des techniques et moyens employés pour recueillir,\n            classer, conserver et exploiter des documents dès leur création`,\n            message: `\n            Vous n'êtes pas connecté à Geid pour avoir accès aux contenus du service d'archivage.\n            Connectez-vous et réessayez à nous pour la visualisation de la section.\n            `,\n        },\n        {\n            title: \"bibliothèque\",\n            src: libraryImage,\n            accessMode: 'public',\n            href: '/app/medialibrary/books',\n            content: `\n            Collection d’ouvrages susceptibles d’édifier les experts du ministère sur leur\n            travail quotidien et toute la communauté nationale sur la place du Ministère du\n            Budget`,\n        },\n        {\n            title: \"filmothèque\",\n            src: filmlibraryImage,\n            accessMode: 'public',\n            href:\"/app/medialibrary/films\",\n            content: `\n                Collection des films documentaires professionnels et amateurs relative au\n                domaine du Budget.`,\n        },\n        {\n            title: \"photothèque\",\n            src: photolibraryImage,\n            accessMode: 'public',\n            href: '/app/medialibrary/pictures',\n            content: `\n             Collection des figures de proue du Ministère, des personnalités de référence  dans\n            la production budgétaire et évènement mémorial au Ministère du Budget`,\n        },\n        {\n            title: \"production & publication\",\n            src: productImage,\n            accessMode: 'public',\n            content: `\n            Production: des bulletins périodiques sans oublier le recueil des actes de gestion.\n            Publication: Diffusion, vulgarisation et dissémination des informations`,\n        },\n        {\n            title: \"gestion de l'information\",\n            src: managerImage,\n            accessMode: 'public',\n            content: `\n            Processus d'organisation, traitement, controle, partage et conservation\n            de l'information sous toute ses formes en vue d'une meilleure prise de\n            décision au sein d'une institution.`\n            // content: `\n            // La gestion implique la capacité à organiser et contrôler la structure,\n            // le traitement et la mise à disposition dans un format exploitable de l’information\n            // de manière securisée`,\n        }\n];\n\nexport default cardItems;\n","import {\n      Box,\n      Grid,\n      Card,\n      Chip,\n      CardHeader,\n      CardContent,\n      CardActions,\n      Divider,\n      Button,\n      Typography,\n      useTheme,\n      Paper,\n      CardMedia,\n} from '@mui/material';\nimport Header from './Header';\nimport BookPlan from '../../components/BookPlan';\nimport config from '../../config/app.json';\nimport capStr from '../../services/capStr';\nimport CardMediaPub from '../../components/CardMediaPub';\nimport { Link } from 'react-router-dom';\nimport { useSession } from '../../services/globalConfig';\nimport carouselItems from './carouselItems';\nimport cards from './cardItems';\nimport Carousel from 'react-material-ui-carousel';\nimport FormInputTheme from '../../config/FormInputTheme';\nimport useSize from '../../services/useSize';\n\nexport default function Home() {\n    const theme = useTheme();\n    const [,{getSession}] = useSession();\n    const isAuth = getSession('user');\n    const size = useSize();\n    return (\n        <Box>\n            <Header/>\n            <Carousel\n              animation=\"slide\"\n              sx={{\n                mb:1\n              }}\n            >\n              {\n                carouselItems.map((item, index) => (\n                  <Paper \n                    sx={{position: 'relative',}} \n                    key={index} elevation={0}>\n                    <CardMedia\n                        component=\"img\"\n                        height={size.key === 'xs' ? 355: 200}\n                        image={item.uri}\n                        sx={{\n                            filter: 'contrast(150%)',\n                        }}\n                    />\n                    <Box \n                        sx={{\n                            position: 'absolute', \n                            top: 0, \n                            left: 0, \n                            width: '70%', \n                            height: '100%',\n                            color: 'white',\n                            background: 'rgba(0,0,0,0.5)',\n                        }}\n                    >\n                        <CardContent>\n                            <Typography\n                                fontSize={25}\n                            >{item.description}</Typography>\n                                <FormInputTheme mode=\"dark\">\n                                    <Divider\n                                        textAlign=\"right\"\n                                    >\n                                        <Chip label={item.title}/>\n                                    </Divider>\n                                </FormInputTheme>\n                        </CardContent>\n                    </Box>\n                  </Paper>\n                ))\n              }\n            </Carousel>\n            <Card sx={{mx: 1}} elevation={0}>\n                <CardHeader\n                    title=\"GEID\"\n                    subheader=\"Gestion Electronique de l'Information et des Documents\"\n                    sx={{\n                        //border: '1px solid black',\n                        mb: -3,\n                    }}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        La Gestion Electronique de l'Information et des Documents désigne l'ensemble\n                        des techniques et pratiques nécessaires pour la prise en charge du flux\n                        important des données, informations et documents au sein d'une organisation.\n                        Cette solution informatique gère le cycle de vie des fichiers textes, sons,\n                        images et vidéos. La GEID offre entre autres avantages : le gain de temps et\n                        d’espace considérable avec son archivage électronique, une bibliothèque virtuelle\n                        régulièrement à jour, une filmothèque et une photothèque bien fournie.\n                    </Typography>\n                </CardContent>\n                {!isAuth &&\n                <CardActions>\n                    <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        LinkComponent={Link}\n                        to=\"/signup\"\n                        color={theme.palette.mode === 'dark' ? \"inherit\" : \"primary\"}\n                    >\n                        s'inscrire a geid\n                    </Button>\n                </CardActions>}\n            </Card>\n            <Box>\n                <Grid container spacing={1} sx={{p:1, pb: 0}}>\n                    {documents.map((doc, index) => (\n                        <Box \n                            key={index} \n                            component={Grid} \n                            item \n                            xs={size.value({\n                                xs: 12,\n                                md: 6,\n                                lg: 3,\n                                xl: 2\n                            })}\n                        >\n                            <BookPlan\n                                title={capStr(doc.title.toLowerCase())}\n                                date=\"\"\n                                coverUrl={process.env.PUBLIC_URL + '/imgs/' + doc.image}\n                                link={process.env.PUBLIC_URL + '/documents/' + doc.link}\n                            />\n                        </Box>\n                    ))}\n                </Grid>\n            </Box>\n            <Box>\n                <Grid container spacing={1} sx={{p:1}}>\n                    {cards.map((card, index) => (\n                            <Box key={index} component={Grid} item \n                            xs={size.value({\n                                xs: 12,\n                                md: 6,\n                                lg: 4,\n                                xl: 4\n                            })}>\n                                <CardMediaPub\n                                    title={card.title}\n                                    content={card.content}\n                                    href={card.href}\n                                    modeLink=\"in\"\n                                    uri={card.src}\n                                    access={card.accessMode === 'private' ? !!isAuth : true}\n                                    navigateTo={card.redirectTo}\n                                    message={card.message}\n                                />\n                            </Box>\n                        ))}\n                </Grid>\n            </Box>\n        </Box>\n    );\n}\n\nconst { documents } = config;\n"],"names":["TO_RADIANS","Math","PI","image","crop","scale","rotate","Promise","resolve","reject","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","width","scaleY","naturalHeight","height","pixelRatio","window","devicePixelRatio","floor","imageSmoothingQuality","cropX","x","cropY","y","rotateRads","centerX","centerY","save","translate","drawImage","restore","toBlob","AvatarProfileEditor","props","useAxios","method","manual","loading","refetch","cancel","useState","message","snackbar","error","file","otherProps","open","color","useTheme","palette","mode","cropData","useRef","targetEl","FormInputTheme","Dialog","fullWidth","BackdropProps","sx","backdropFilter","DialogTitle","id","DialogContent","dividers","Editer","ref","src","URL","createObjectURL","DialogActions","Button","onClick","current","onClose","size","LoadingButton","canvasToImg","then","blob","blobToFile","File","getName","name","type","data","FormData","append","variant","forwardRef","setCrop","setLoading","useEffect","Box","flex","display","minHeight","onChange","circularCrop","aspect","component","alt","toString","onLoad","Skeleton","aniamation","ProfileNav","values","setValues","el","useSession","getSession","cleanSession","email","lastName","middleName","firstName","isAuth","fileInput","Menu","anchorEl","keepMounted","PaperProps","elevation","overflow","bgcolor","theme","background","paper","border","divider","m","p","transformOrigin","horizontal","vertical","anchorOrigin","CardContent","CardHeader","flexDirection","justifyContent","alignItems","avatar","Badge","overlap","badgeContent","borderRadius","IconButton","click","AddAPhotoRounded","fontSize","Avatar","charAt","title","titleTypographyProps","align","subheader","subheaderTypographyProps","Divider","CardActions","mb","pb","flexGrow","textTransform","hidden","accept","event","target","files","AppNav","Typography","Grid","container","apps","sort","map","app","index","item","xs","Stack","spacing","CardActionArea","LinkComponent","Link","to","path","ImgToIcon","icon","FormHelperText","textAlign","textOverflow","label","length","CropText","len","padType","medialibraryIconImage","archiveIconImage","HomeRoundedIcon","disabled","accessMode","TheatersRoundedIcon","DashboardRoundedIcon","ContactSupportRoundedIcon","Header","useConfig","actions","tab","propfileNav","appNav","AppBar","position","top","Toolbar","Tabs","value","links","link","RegExp","test","Tab","iconPosition","direction","Tooltip","arrow","enterDelay","handleChangeProps","settingsNav","SettingsRounded","AppsRounded","Chip","text","replace","toUpperCase","CardMediaPub","uri","content","href","modeLink","access","navigateTo","loaded","setLoad","setOpen","preventDefault","Card","capStr","CardMedia","animation","children","description","archivesImage","redirectTo","filmlibraryImage","photolibraryImage","Home","useSize","carouselItems","Paper","key","filter","left","mx","documents","doc","md","lg","xl","BookPlan","toLowerCase","date","coverUrl","cards","card","config"],"sourceRoot":""}